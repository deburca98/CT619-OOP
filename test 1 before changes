package workshop1;
import javax.swing.*;
// a program that test the Cartesian rectangle program
public class RectangleTestCart {

	public static void main(String[] args) {
		
		float x1 = 0,x2 = 0,x3 = 0,x4=0;
		float y1 = 0,y2 = 0,y3 = 0,y4=0;
		String userInput;
		
		// includes a description of what program does 
		
		
		JOptionPane.showMessageDialog(null, "This program takes Cartesian "
				+ "values and creates a rectangle");
		// this provides a brief visual of the labels for the points 
		// purpose is to inform user of where to enter their coordinate
		
		JOptionPane.showMessageDialog(null, "Enter values for "
				+ "\n x1 y1--------------- x2 y2, "
				+ "\n      *                      * "
				+ "\n      *                      *"
				+ "\nx3 y3,---------------x4 y4");
		
		
		// user input section 
		userInput= JOptionPane.showInputDialog("Enter Value for x1");
		
		while("".equals(userInput.trim())) 
		{
			JOptionPane.showMessageDialog(null, "Cannot accept blank entries!");
			userInput= JOptionPane.showInputDialog("Enter Value for x1");
		}
		
		x1=Float.parseFloat(userInput);
			
	
		userInput= JOptionPane.showInputDialog("Enter Value for y1");
		
		while("".equals(userInput.trim())) 
		{
			JOptionPane.showMessageDialog(null, "Cannot accept blank entries!");
			userInput= JOptionPane.showInputDialog("Enter Value for y1");
		}
		// parse this string to a float as required
		y1=Float.parseFloat(userInput);
		
		
		userInput= JOptionPane.showInputDialog("Enter Value for x2");
		while("".equals(userInput.trim())) 
		{
			JOptionPane.showMessageDialog(null, "Cannot accept blank entries!");
			userInput= JOptionPane.showInputDialog("Enter Value for x2");
		}
		// parse this string to a float as required
		x2=Float.parseFloat(userInput);
		
		userInput= JOptionPane.showInputDialog("Enter Value for y2");
		
		while("".equals(userInput.trim())) 
		{
			JOptionPane.showMessageDialog(null, "Cannot accept blank entries!");
			userInput= JOptionPane.showInputDialog("Enter Value for y2");
		}
		// parse this string to a float as required
		y2=Float.parseFloat(userInput);
		
		
		userInput= JOptionPane.showInputDialog("Enter Value for x3");
		while("".equals(userInput.trim())) 
		{
			JOptionPane.showMessageDialog(null, "Cannot accept blank entries!");
			userInput= JOptionPane.showInputDialog("Enter Value for x3");
		}
		// parse this string to a float as required
		x3=Float.parseFloat(userInput);
		
		userInput= JOptionPane.showInputDialog("Enter Value for y3");
		// parse this string to a float as required
		while("".equals(userInput.trim())) 
		{
			JOptionPane.showMessageDialog(null, "Cannot accept blank entries!");
			userInput= JOptionPane.showInputDialog("Enter Value for y3");
		}
		y3=Float.parseFloat(userInput);
		
		userInput= JOptionPane.showInputDialog("Enter Value for x4");
		while("".equals(userInput.trim())) 
		{
			JOptionPane.showMessageDialog(null, "Cannot accept blank entries!");
			userInput= JOptionPane.showInputDialog("Enter Value for x4");
		}
		// parse this string to a float as required
		x4=Float.parseFloat(userInput);
		
		userInput= JOptionPane.showInputDialog("Enter Value for y4");
		while("".equals(userInput.trim())) 
		{
			JOptionPane.showMessageDialog(null, "Cannot accept blank entries!");
			userInput= JOptionPane.showInputDialog("Enter Value for y4");
		}
		// parse this string to a float as required
		y4=Float.parseFloat(userInput);
		
		RectangleCart rec = new RectangleCart(x1,x2,x3,x4,y1,y2,y3,y4);
		
		JOptionPane.showMessageDialog(null, "The Rectangle of Length" +rec.getLength() 
		+"\n & Width" +rec.getWidth() +"\n Has an Area of " +rec.Area()  
		+"\n & Perimeter" +rec.Perimeter() );
			
	}
	

}

